generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Campaigns {
  id        Int      @id @default(autoincrement())
  name      String
  startDate DateTime
  endDate   DateTime
  status    Status
  category  Category
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Users     Users?    @relation(fields: [userId], references: [id])
  userId    Int?
}

model Users {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  password   String
  name       String
  campaigns  Campaigns[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  UserGroups UserGroups[]
  UserRoles  UserRoles[]
}

model Roles {
  id        Int         @id @default(autoincrement())
  name      String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  UserRole  UserRoles[]
}

model UserRoles {
  id     Int   @id @default(autoincrement())
  userId Int
  roleId Int
  User   Users @relation(fields: [userId], references: [id])
  Role   Roles @relation(fields: [roleId], references: [id])
}

model UserGroups {
  id      Int    @id @default(autoincrement())
  userId  Int
  groupId Int
  User    Users  @relation(fields: [userId], references: [id])
  Group   Groups @relation(fields: [groupId], references: [id])
}

model Groups {
  id        Int          @id @default(autoincrement())
  name      String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  UserGroup UserGroups[]
}

enum Category {
  POLITICAL
  SOCIAL
  ECONOMIC
  ENVIRONMENTAL
}

enum Status {
  ACTIVED
  PAUSED
  EXPIRED
}

enum Role {
  ADMIN
  USER
  GUEST
  STAFF
  MANAGER
}
